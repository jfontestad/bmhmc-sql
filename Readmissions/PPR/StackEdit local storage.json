{"dropbox-auth:default:cBMUdCP1pqf4KAuipOld1H28mg":"{\"key\":\"lq6mwopab8wskas\",\"secret\":\"851fgnucpezy84t\",\"token\":\"bOJqZVsI46sAAAAAAAM7JqwnLRGy-y02n0q14r7rcXoxD-d0_5XE-hO98Vp6kGWc\",\"uid\":\"5539708\"}","dropbox.lastChangeId":"AAFBUTE6XXB3TlmlhRy-DqnZs5QDLpUZt3Av2w73ufsj3tg5LmWwyLGi9RGv3VFxTjfy1r_U9BRb18sGrv95STI7PdgzZilX7gMy9ToYpMSS8FSsJskUqu9QtQmDubQ0IT9O_uqe4Pvye-gk1zTW8gwaRdVa0ShWqmGIcSdWxfKyJqqUP_1EaVmtzstoUU-MMxctvH4TYJHJx5oEuCTdF_QaekBpFmAPmK9seidEVfNpQ7lTLryX1y334SolxEtFWgUb5QnYpHPZcOI95NjScCirm_KHVOZXOO1dFrBa8xMS22Oc6RxCCqxKtf6jaIFyX3E","file.1vfv3tx.content":"\n\n\n> Written with [StackEdit](https://stackedit.io/).\n\nLast updated on June 27th 2014 by Steven Sanderson\n\n## Idea ##\nReadmissions, specifically readmissions to a facility within 30 days is a measure set forth by The Centers for Medicare and Medicaid CMS as a metric of outcome quality. The idea is that if treated appropriately the first time a subsequent visit would be unnecessary. This can be a bit cumbersome as there are events that might not be clinically related to the initial visit, which is where looking at Potentially Preventable Readmissions is more appropriate. This then allows an institution to see if they are really providing quality care by limiting the amount of potentially preventable readmissions, those that are clinically related to the initial visit in some fashion.\n\nThis document lists the code and the meaning of it and is meant to be a working document of sorts.\n\n\n----------\n\n\n## Phase 1 ##\nThis phase deals with identifying those visits that are Globally-excluded admissions and non-events.\n\nTo do this we have created a table that lists globally-excluded APR-DRG's and Non-event DRG's, this table is not yet fully complete as non-event procedure codes are still missing from it, rather there is a query that creates a temp table of excluded procedure codes.\n\nFirst the code of the globally-excluded APR-DRGS\n\n    /*\n    VARIABLE DECLARATION AND INITIALIZATION\n    */\n    DECLARE @VISIT_ID VARCHAR(8);\n    SET @VISIT_ID  = '20000000';\n    \n    /*\n    #######################################################################\n    \n    CREATE AND POPULATE TABLE WITH GLOBALLY EXCLUDED APR-DRG'S\n    \n    #######################################################################\n    */\n    DECLARE @EXCLUSIONS TABLE (\n    ID INT NOT NULL PRIMARY KEY,\n    [APR-DRG] VARCHAR (3)\n    )\n    \n    INSERT INTO @EXCLUSIONS(ID, [APR-DRG])\n    VALUES\n    -- GLOBAL EXCLUSIONS \n    (1,'041'),(2,'070'),(3,'073'),(4,'080'),(5,'082'),(6,'131'),(7,'580'),\n    (8,'581'),(9,'583'),(10,'588'),(11,'589'),(12,'591'),(13,'593'),\n    (14,'602'),(15,'603'),(16,'607'),(17,'608'),(18,'609'),(19,'611'),\n    (20,'612'),(21,'613'),(22,'614'),(23,'621'),(24,'622'),(25,'623'),\n    (26,'625'),(27,'626'),(28,'630'),(29,'631'),(30,'633'),(31,'634'),\n    (32,'636'),(33,'639'),(34,'640'),(35,'690'),(36,'691'),(37,'692'),\n    (38,'693'),(39,'694'),(40,'770'),(41,'890'),(42,'892'),(43,'893'),\n    (44,'955'),(45,'956'),\n    \n    -- AGE EXCLUSION APR-DRG'S\n    (46,'053'),(47,'248'),(48,'463'),(49,'812'),(50,'816'),\n    \n    -- TRUMA EXCLUSIONS\n    (51,'308'),(52,'309'),\n    (53,'384'),(54,'711'),(55,'910'),(56,'911'),(57,'912'),(58,'930'),\n    \n    -- NON-EVENT DRG'S\n    (59,'110'),(60,'136'),(61,'240'),(62,'281'),(63,'343'),(64,'382'),\n    (65,'442'),(66,'461'),(67,'500'),(68,'530'),(69,'680'),(70,'681'),\n    (71,'860'),(72,'862'),(73,'863')\n    ;\n    \n\n\n\n\n\nNow the code for excluded procedure codes:\n\n    /*\n    ########################################################################\n    \n    THIS QUERY WILL OBTAIN THOSE EVENTS THAT ARE NOT NON-EVENTS, THAT IS TO\n    SAY THAT ALL NON-EVENT PROCEDURE CODE ACCOUNTS ARE KICKED OUT\n    \n    ########################################################################\n    */\n    \n    DECLARE @NONEVENTPROC TABLE (\n    ID INT NOT NULL PRIMARY KEY,\n    [CPT CODE] VARCHAR(5)\n    )\n    \n    INSERT INTO @NONEVENTPROC(ID, [CPT CODE])\n    VALUES\n    (1,'00.10'), (2,'00.15'), (3,'17.70'), (4,'92.30'),\n    (5,'92.31'), (6,'92.32'), (7,'92.33'), (8,'92.39'),\n    (9,'99.25'), (10,'99.28')\n    ;\n    \n    SELECT CODE.pt_id, CODE.proc_cd\n    \n    FROM smsmir.mir_sproc CODE\n    LEFT JOIN @NONEVENTPROC                     NOCD\n    ON CODE.proc_Cd = NOCD.[CPT CODE]\n    \n    WHERE Pt_id BETWEEN '000010000000' AND '0000299999999'\n    AND proc_Eff_Dtime > '2014-01-01'\n    AND NOCD.[CPT CODE] IS NULL\n    AND CODE.proc_cd <> 'CONSULT'\n    \n\n\n\n\nFinally we need a method of identifying those discharges that are acceptable:\n\n    /*\n    #######################################################################\n    \n    DISCHARGES THAT ARE OK\n    \n    #######################################################################\n    */\n    DECLARE @PT_ACCT_TYPE     VARCHAR;\n    DECLARE @VISIT_ID         VARCHAR(8);\n    \n    SET @PT_ACCT_TYPE     = 'I';\n    SET @VISIT_ID         = '20000000';\n    \n    SELECT *\n    \n    FROM smsdss.BMH_PLM_PtAcct_V\n    \n    WHERE dsch_disp IN ('AHR', 'ATW')\n    AND Plm_Pt_Acct_Type = @PT_ACCT_TYPE\n    AND PtNo_Num < @VISIT_ID\n    \n    \n\n\n\nAll of the above queries will help in identifying those admissions/discharges that are ok to use in determining if a readmission was a potentially preventable one. The logic will get applied in later queries.\n\n\n----------\n\n\n## Creating a Readmits View for Chains ##\nIn order to see what admission is the readmit id number, we create a view that then gets `LEFT OUTER JOIN`'ed onto a recursive `CTE` that will in one row, show the initial encounter and the readmission encounter. This view is created as follows:\n\n    /*\n    ########################################################################\n    \n    CREATE A READMISSIONS VIEW TABLE THAT WILL GET USED TO CALCULATE\n    CHAIN LENGTH AND CHAIN COUNTS\n    \n    ########################################################################\n    */\n    USE [SMSPHDSSS0X0]\n    GO\n    \n    /****** \n    \n    Object:  View [smsdss].[vReadmits] Script Date: 06/24/2014 10:55:12 \n    \n    ******/\n    ALTER VIEW [smsdss].[vReadmits]\n    AS\n    SELECT T.Pt_No                 -- The Visit ID\n    , T.Med_Rec_No                 -- Medical Record Number\n    , MIN(R.Adm_Date) ReadmittedDT -- The Readmission Date\n    , MIN(R.[Pt_NO]) NextVisitID   -- The Readmission Visit ID\n    \n    -- This will get a count of how many times someone was a 30 Day Readmit\n    , SUM(CASE\n    \t\tWHEN R.Adm_Date <= DATEADD(D, 30, ISNULL(T.Dsch_Date, R.Adm_Date))\n    \t\tTHEN 1\n    \t\tELSE 0\n    \t\tEND\n    \t  ) READMITNEXT30\n    \n    FROM smsdss.BMH_PLM_PtAcct_V          T\n        LEFT JOIN smsdss.BMH_PLM_PtAcct_V R\n        ON T.Med_Rec_No = R.Med_Rec_No\n        AND T.Pt_No < R.Pt_No\n        AND R.Plm_Pt_Acct_Type = 'I'\n        AND R.Pt_No < '20000000'\n    \n    WHERE T.Plm_Pt_Acct_Type = 'I'\n        AND T.Pt_No < '20000000'\n    \n    GROUP BY T.Pt_No, T.Med_Rec_No\n    \n    \n    GO\n    \n\n\nNow that the view is created we can use the Recursive Common Table Expression to get the readmission daisy chain length, chain counts and discharge dispositions along with assigned APR-DRG numbers.\n\n\n----------\n\n\n## PPR Daisy Chains - Recursive CTE ##\nWe want to know how many times someone was a 30 day readmit, along with how many times someone was a 30 day readmit inside of a daisy chain, and how many times they were in a daisy chain. This query will not filter out any of the exclusionary details but the views and filters can be put inplace to do so.\n\n    /*\n    #######################################################################\n    \n    THIS QUERY WILL MAKE USE OF THE VIEW THAT WAS CREATED BY THE QUERY\n    \"CREATE READMIT VIEW.sql\"\n    \n    THIS QUERY MAKES USE OF A COUPLE OF RECURSIVE CTE'S IN ORDER TO OBTAIN\n    THE DAISY CHAIN COUNT AND THE COUNT OF CHAINS\n    \n    #######################################################################\n    */\n    \n    -- CREATE A TABLE WHERE INITIAL ENCOUNTERS WILL BE STORED IN ORDER TO \n    -- QUERY LATER ON\n    DECLARE @EVENTS TABLE (\n        -- Every visit gets an eventID, think of it as another unique key\n    \t  EVENTID   INT IDENTITY(1,1) PRIMARY KEY\n    \t, EVENTDATE DATE        -- Admit Date\n    \t, PERSONID  VARCHAR(20) -- MRN\n    \t, VISIT     VARCHAR(20) -- Encounter / Visit ID\n    \t, DSCH      DATE        -- \n    );\n    \n    -- THIS COMMON TABLE EXPRESSION IS USED TO POPULATE THE EVENTS TABLE\n    WITH CTE AS (\n    \tSELECT Adm_Date -- Date of admission\n    \t, Med_Rec_No    -- MRN\n    \t, Pt_No         -- Encounter / Visit ID --PTNO_NUM CHANGE BACK TO\n    \t, Dsch_Date     -- Discharge Date\n    \n    \tFROM smsdss.BMH_PLM_PTACCT_V -- Your table here\n    \n    \tWHERE Plm_Pt_Acct_Type = 'I' -- Only want inpatients\n    \tAND PtNo_Num < '20000000'    -- Only want inpatients\n    \t--AND Dsch_Date >= '2004-01-01'\n    \t--AND Dsch_Date < GETDATE()\n    )\n    -- INSERTING THE COMMON TABLE EXPRESSION RESULTS INTO THE EVENTS TABLE\n    INSERT INTO @EVENTS\n    SELECT C1.Adm_Date\n    , C1.Med_Rec_No\n    , C1.Pt_No --\n    , C1.Dsch_Date\n    \n    FROM CTE C1\n    \n    --SELECT * FROM dbo.EVENTS ** You can uncomment this to see the output\n    \n    -- This table will capture all the following information\n    DECLARE @EventsWithNum TABLE (\n    \t  EventID   INT                    -- A second unique visit key\n    \t, EventDate DATE                   -- Admit date\n    \t, PersonID  VARCHAR(20)            -- MRN\n    \t, VISIT     VARCHAR(20)            -- Encounter / Visit ID\n    \t, DSCH      DATE                   -- Discharge Date\n    \t, EventNum  INT                    -- 30 Day Readmit Number:\n    \t                                   --  (How many 30day RA's)\n    \t, PRIMARY KEY (EventNum, PersonID) -- Complex Index Key\n    );\n    INSERT @EventsWithNum\n    SELECT crt.EVENTID\n    , crt.EVENTDATE\n    , crt.PERSONID\n    , crt.VISIT\n    , crt.DSCH\n    , ROW_NUMBER() OVER(\n    \t\t\t\t\tPARTITION BY crt.PERSONID\n    \t\t\t\t\tORDER BY crt.EVENTDATE\n    \t\t\t\t\t, CRT.EVENTID\n    \t\t\t\t\t) AS EventNum\n    \n    FROM @EVENTS crt\n    WHERE crt.PERSONID IS NOT NULL -- We don't want NULL Encounter ID's\n    ;\n    \n    --SELECT * FROM @EventsWithNum ** Uncomment to see intermediate results\n    \n    -- Another Common Table Expression to get the Sequential Events and counts\n    WITH CountingSequentialEvents AS (\n    \tSELECT crt.EventID\n    \t, crt.EventDate\n    \t, crt.PersonID\n    \t, crt.VISIT\n    \t, crt.DSCH\n    \t, crt.EventNum\n    \t, 1 AS GroupNum\n    \t, 1 AS GroupEventNum\n    \n    \tFROM @EventsWithNum crt\n    \t\n    \tWHERE crt.EventNum = 1\n    \n    \tUNION ALL\n    \n    \tSELECT crt.EventID\n    \t, crt.EventDate\n    \t, crt.PersonID\n    \t, crt.VISIT\n    \t, crt.DSCH\n    \t, crt.EventNum\n    \t, CASE\n    \t\tWHEN DATEDIFF(DAY, prev.EventDate, crt.EventDate) <= 30\n    \t\tTHEN prev.GroupNum\n    \t\tELSE prev.GroupNum + 1\n    \t  END AS GroupNum\n    \t, CASE\n    \t\tWHEN DATEDIFF(DAY, prev.EventDate, crt.EventDate) <= 30\n    \t\tTHEN prev.GroupEventNum + 1\n    \t\tELSE 1\n    \t  END AS GroupEventNum\n    \n    \tFROM @EventsWithNum                  crt\n    \tJOIN CountingSequentialEvents        prev\n    \tON crt.PersonID = prev.PersonID\n    \tAND crt.EventNum = prev.EventNum + 1\n    )\n    SELECT x.EventID                        AS [EVENT ID]\n    , x.EventDate                           AS [ADMIT DATE]\n    , x.PersonID                            AS [MRN]\n    , x.VISIT                               AS [VISIT ID]\n    , x.DSCH                                AS [DISCHARGE DATE]\n    , A.drg_no                              AS [INITIAL APR-DRG]\n    , CASE\n    \tWHEN GE.[APR-DRG] IS NULL\n    \tTHEN 0\n    \tELSE 1\n      END                                   AS [INITIAL EXCLUSION FLAG]\n    , B.dsch_disp                           AS [INITIAL DISPO]\n    , x.GroupEventNum                       AS [CHAIN LEN]\n    , x.GroupNum                            AS [CHAIN NUMBER]\n    , x.EventNum                            AS [30 DAY RA COUNT]\n    , V.NextVisitID                         AS [READMIT VISIT ID]\n    , C.drg_no                              AS [READMIT APR-DRG]\n    , CASE\n        WHEN GE2.[APR-DRG] IS NULL\n        THEN 1\n        ELSE 0\n      END                                   AS [RA EXCLUSION FLAG]\n    , D.dsch_disp                           AS [READMIT DISPO]\n    , CAST(V.ReadmittedDT AS DATE)          AS [READMIT DATE]\n    , DATEDIFF(DAY, x.DSCH, V.ReadmittedDT) AS [INTERIM]\n    \n    FROM CountingSequentialEvents        x\n    \tLEFT MERGE JOIN smsdss.vReadmits V\n    \tON x.VISIT = V.Pt_No \n    \tLEFT OUTER JOIN smsmir.mir_drg   A  -- Gets APR-DRG OF INITIAL VISIT\n    \tON x.VISIT = A.pt_id\n    \tLEFT OUTER JOIN smsmir.mir_vst   B  -- Gets Discharge Dispo OF INITIAL VISIT\n    \tON A.pt_id = B.pt_id\n    \tLEFT OUTER JOIN smsmir.mir_drg   C  -- GET APR-DRG OF READMIT VISIT\n    \tON V.NextVisitID = C.pt_id\n    \tLEFT OUTER JOIN smsmir.mir_vst   D  -- GETS DISCHARGE DISPO OF READMIT VISIT\n    \tON C.pt_id = D.pt_id\n    \t-- GET THE GLOBALLY EXCLUDED APR-DRGS SO THAT WE CAN FILTER\n    \t-- INITIAL APR-DRG EXCLUSION\n    \tLEFT OUTER JOIN smsdss.c_ppr_apr_drg_global_exclusions GE\n    \tON A.drg_no = GE.[APR-DRG]\n    \t-- READMIT APR-DRG EXCLUSION\n    \tLEFT OUTER JOIN smsdss.c_ppr_apr_drg_global_exclusions GE2\n    \tON C.drg_no = GE2.[APR-DRG]\n    \n    -- THIS LIMITS THE DRG TYPE, IT ALSO DROPS MANY RECORDS FROM THE FINAL RESULT SET\n    WHERE A.drg_type = '3'\n    AND C.drg_type = '3'\n    \n    ORDER BY x.PersonID, x.EventDate\n    \n    OPTION (MAXRECURSION 1000); -- Max events a person can have\n    \n\n\n\nThe above query will get the following information:\n\n 1. EventID  - (a secondary primary key)\n 2. EventDate  - (the date of admission)\n 3. PersonID  - (Medical Record Number)\n 4. VISIT - (Visit ID)\n 5. DSCH - (Discharge Date)\n 6. drg_no - (Initial APR-DRG)\n 7. Initial Exclusion Flag - (was the APR-DRG on the exclusion list, 1/0)\n 8. dsch_disp - (initial discharge disposition)\n 9. GroupEventNum - (Daisy Chain length)\n 10. GroupNum - (Chain number)\n 11. EventNum - (The count of being a 30 day readmit)\n 12. NextVisitID - (The next encoutner / visit id)\n 13. c.drg_no - (Readmission APR-DRG)\n 14. RA Exclusion Flag - (was the APR-DRG on the exclusion list, 1/0)\n 15. D.dsch_disp - (Readmission Discharge Disposition)\n 16. ReadmittedDT - (Readmission Date)\n 17. Interim - (How many days between addmisions, NULL allowable)\n\nThe filtering on the APR-DRG and the discharge disposition is not done with the above query as we want to turn that itself into either an indexed table or a view that can have logic applied to it for performance purposes.\n \n    \n    ","file.1vfv3tx.editorScrollTop":"0","file.1vfv3tx.editorSelectRange":"0;0;0;0","file.1vfv3tx.previewScrollTop":"0","file.1vfv3tx.publish":";","file.1vfv3tx.selectTime":"1404134968473","file.1vfv3tx.sync":";","file.1vfv3tx.title":"PPR Documentation","file.by8me0.content":"\n\n\n> Written with [StackEdit](https://stackedit.io/).\n\nLast updated on 7-03-2014 by Steven Sanderson\n\n## Idea ##\nReadmissions, specifically readmissions to a facility within 30 days is a measure set forth by The Centers for Medicare and Medicaid CMS as a metric of outcome quality. The idea is that if treated appropriately the first time a subsequent visit would be unnecessary. This can be a bit cumbersome as there are events that might not be clinically related to the initial visit, which is where looking at Potentially Preventable Readmissions is more appropriate. This then allows an institution to see if they are really providing quality care by limiting the amount of potentially preventable readmissions, those that are clinically related to the initial visit in some fashion.\n\nThis document lists the code and the meaning of it and is meant to be a working document of sorts.\n\nThere are three (3) Phases of the potentially preventable classification system, those being:\n\n1. Phase 1 - Identify Excluded Admissions and Non-events\n2. Phase 2 - Determine Preliminary Classification of Renaming Admissions\n3. Phase 3 - Identify PPRs and Determine Final Classification of Admissions\n\n\n----------\n\n\n## Phase 1 ##\nThis phase deals with identifying those visits that are Globally-excluded admissions and non-events.\n\nTo do this we have created a table that lists globally-excluded APR-DRG's and Non-event DRG's, this table is not yet fully complete as non-event procedure codes are still missing from it, rather there is a query that creates a temp table of excluded procedure codes.\n\nCreate the Readmissions View (This is done)\nNeed to make it a table\n\n    USE [SMSPHDSSS0X0]\n    GO\n    \n    /****** \n    \n    Object:  View [smsdss].[vReadmits]    Script Date: 06/30/2014 12:15:07 \n    \n    ******/\n    \n    SET ANSI_NULLS ON\n    GO\n    \n    SET QUOTED_IDENTIFIER ON\n    GO\n    \n    ALTER VIEW [smsdss].[vReadmits]\n    AS\n    WITH cte AS (\n      SELECT PTNO_NUM\n      \t, Med_Rec_No\n    \t, Dsch_Date\n    \t, Adm_Date\n    \t, M.adm_src_desc\n    \t, ROW_NUMBER() OVER (\n    \t                     PARTITION BY MED_REC_NO \n    \t                     ORDER BY ADM_DATE\n    \t                     ) AS r\n    \t                     \n      FROM smsdss.BMH_PLM_PtAcct_V\n      LEFT JOIN smsdss.adm_src_mstr AS M\n      ON Adm_Source = LTRIM(RTRIM(M.ADM_SRC))\n      AND M.orgz_cd = 'S0X0'\n      \n      WHERE Plm_Pt_Acct_Type = 'I'\n      AND PtNo_Num < '20000000' \n      )\n    SELECT\n    c1.PtNo_Num                                AS [INDEX]\n    , c2.PtNo_Num                              AS [READMIT]\n    , c2.adm_src_desc                          AS [READMIT SOURCE DESC]\n    , c1.Med_Rec_No                            AS [MRN]\n    , c1.Dsch_Date                             AS [INITIAL DISCHARGE]\n    , c2.Adm_Date                              AS [READMIT DATE]\n    , DATEDIFF(DAY, c1.Dsch_Date, c2.Adm_Date) AS INTERIM\n    , ROW_NUMBER() OVER (\n    \t\t\t\t    PARTITION BY C1.MED_REC_NO \n    \t\t\t\t    ORDER BY C1.PTNO_NUM\n    \t\t\t\t    ) AS [30D RA COUNT]\n    \n    \n    FROM cte c1\n    INNER JOIN cte c2 ON c1.Med_Rec_No = c2.Med_Rec_No\n    \n    WHERE c1.Adm_Date <> c2.Adm_Date\n    AND c1.r+1 = c2.r\n    \n    GO\n\nCode of the globally-excluded APR-DRGS (This is done)\nThis is already an indexed table\n\n    /*\n    VARIABLE DECLARATION AND INITIALIZATION\n    */\n    DECLARE @VISIT_ID VARCHAR(8);\n    SET @VISIT_ID  = '20000000';\n    \n    /*\n    #######################################################################\n    \n    CREATE AND POPULATE TABLE WITH GLOBALLY EXCLUDED APR-DRG'S\n    \n    #######################################################################\n    */\n    DECLARE @EXCLUSIONS TABLE (\n    ID INT NOT NULL PRIMARY KEY,\n    [APR-DRG] VARCHAR (3)\n    )\n    \n    INSERT INTO @EXCLUSIONS(ID, [APR-DRG])\n    VALUES\n    -- GLOBAL EXCLUSIONS \n    (1,'041'),(2,'070'),(3,'073'),(4,'080'),(5,'082'),(6,'131'),(7,'580'),\n    (8,'581'),(9,'583'),(10,'588'),(11,'589'),(12,'591'),(13,'593'),\n    (14,'602'),(15,'603'),(16,'607'),(17,'608'),(18,'609'),(19,'611'),\n    (20,'612'),(21,'613'),(22,'614'),(23,'621'),(24,'622'),(25,'623'),\n    (26,'625'),(27,'626'),(28,'630'),(29,'631'),(30,'633'),(31,'634'),\n    (32,'636'),(33,'639'),(34,'640'),(35,'690'),(36,'691'),(37,'692'),\n    (38,'693'),(39,'694'),(40,'770'),(41,'890'),(42,'892'),(43,'893'),\n    (44,'955'),(45,'956'),\n    \n    -- AGE EXCLUSION APR-DRG'S\n    (46,'053'),(47,'248'),(48,'463'),(49,'812'),(50,'816'),\n    \n    -- TRUMA EXCLUSIONS\n    (51,'308'),(52,'309'),\n    (53,'384'),(54,'711'),(55,'910'),(56,'911'),(57,'912'),(58,'930'),\n    \n    -- NON-EVENT DRG'S\n    (59,'110'),(60,'136'),(61,'240'),(62,'281'),(63,'343'),(64,'382'),\n    (65,'442'),(66,'461'),(67,'500'),(68,'530'),(69,'680'),(70,'681'),\n    (71,'860'),(72,'862'),(73,'863')\n    ;\n    \nNow the code for excluded procedure codes: (This needs to be done)\nThe query is done but an indexed table needs to be made\n\n    /*\n    ########################################################################\n    \n    THIS QUERY WILL OBTAIN THOSE EVENTS THAT ARE NOT NON-EVENTS, THAT IS TO\n    SAY THAT ALL NON-EVENT PROCEDURE CODE ACCOUNTS ARE KICKED OUT\n    \n    ########################################################################\n    */\n    \n    DECLARE @NONEVENTPROC TABLE (\n    ID INT NOT NULL PRIMARY KEY,\n    [CPT CODE] VARCHAR(5)\n    )\n    \n    INSERT INTO @NONEVENTPROC(ID, [CPT CODE])\n    VALUES\n    (1,'00.10'), (2,'00.15'), (3,'17.70'), (4,'92.30'),\n    (5,'92.31'), (6,'92.32'), (7,'92.33'), (8,'92.39'),\n    (9,'99.25'), (10,'99.28')\n    ;\n    \n    SELECT CODE.pt_id, CODE.proc_cd\n    \n    FROM smsmir.mir_sproc CODE\n    LEFT JOIN @NONEVENTPROC                     NOCD\n    ON CODE.proc_Cd = NOCD.[CPT CODE]\n    \n    WHERE Pt_id BETWEEN '000010000000' AND '0000299999999'\n    AND proc_Eff_Dtime > '2014-01-01'\n    AND NOCD.[CPT CODE] IS NULL\n    AND CODE.proc_cd <> 'CONSULT'\n    \nFinally we need a method of identifying those discharges that are acceptable: (This is done)\nNeed to make an indexed table from this just like non-events and globally excluded\n\n    /*\n    #######################################################################\n    \n    DISCHARGES THAT ARE OK\n    \n    #######################################################################\n    */\n    DECLARE @PT_ACCT_TYPE     VARCHAR;\n    DECLARE @VISIT_ID         VARCHAR(8);\n    \n    SET @PT_ACCT_TYPE     = 'I';\n    SET @VISIT_ID         = '20000000';\n    \n    SELECT *\n    \n    FROM smsdss.BMH_PLM_PtAcct_V\n    \n    WHERE dsch_disp IN ('AHR', 'ATW')\n    AND Plm_Pt_Acct_Type = @PT_ACCT_TYPE\n    AND PtNo_Num < @VISIT_ID\n    \nAll of the above queries will help in identifying those admissions/discharges that are ok to use in determining if a readmission was a potentially preventable one. The logic will get applied in later queries.\n\n\n----------\n\n## PPR Daisy Chains - Recursive CTE\n\n(This is done)\nNeed to make this an indexed update-able table\n\nWe want to know how many times someone was a 30 day readmit, along with how many times someone was a 30 day readmit inside of a daisy chain, and how many times they were in a daisy chain. This query will not filter out any of the exclusionary details but the views and filters can be put inplace to do so.\n\n    /*\n    #######################################################################\n    \n    THIS QUERY WILL MAKE USE OF THE VIEW THAT WAS CREATED BY THE QUERY\n    \"CREATE READMIT VIEW.sql\"\n    \n    THIS QUERY MAKES USE OF A COUPLE OF RECURSIVE CTE'S IN ORDER TO OBTAIN\n    THE DAISY CHAIN COUNT AND THE COUNT OF CHAINS\n    \n    #######################################################################\n    */\n    \n    -- CREATE A TABLE WHERE INITIAL ENCOUNTERS WILL BE STORED IN ORDER TO \n    -- QUERY LATER ON\n    DECLARE @EVENTS TABLE (\n        -- Every visit gets an eventID, think of it as another unique key\n    \t  EVENTID   INT IDENTITY(1,1) PRIMARY KEY\n    \t, EVENTDATE DATE        -- Admit Date\n    \t, PERSONID  VARCHAR(20) -- MRN\n    \t, VISIT     VARCHAR(20) -- Encounter / Visit ID\n    \t, DSCH      DATE        -- \n    );\n    \n    -- THIS COMMON TABLE EXPRESSION IS USED TO POPULATE THE EVENTS TABLE\n    WITH CTE AS (\n    \tSELECT Adm_Date -- Date of admission\n    \t, Med_Rec_No    -- MRN\n    \t, Pt_No         -- Encounter / Visit ID --PTNO_NUM CHANGE BACK TO\n    \t, Dsch_Date     -- Discharge Date\n    \n    \tFROM smsdss.BMH_PLM_PTACCT_V -- Your table here\n    \n    \tWHERE Plm_Pt_Acct_Type = 'I' -- Only want inpatients\n    \tAND PtNo_Num < '20000000'    -- Only want inpatients\n    \t--AND Dsch_Date >= '2004-01-01'\n    \t--AND Dsch_Date < GETDATE()\n    )\n    -- INSERTING THE COMMON TABLE EXPRESSION RESULTS INTO THE EVENTS TABLE\n    INSERT INTO @EVENTS\n    SELECT C1.Adm_Date\n    , C1.Med_Rec_No\n    , C1.Pt_No --\n    , C1.Dsch_Date\n    \n    FROM CTE C1\n    \n    --SELECT * FROM dbo.EVENTS ** You can uncomment this to see the output\n    \n    -- This table will capture all the following information\n    DECLARE @EventsWithNum TABLE (\n    \t  EventID   INT                    -- A second unique visit key\n    \t, EventDate DATE                   -- Admit date\n    \t, PersonID  VARCHAR(20)            -- MRN\n    \t, VISIT     VARCHAR(20)            -- Encounter / Visit ID\n    \t, DSCH      DATE                   -- Discharge Date\n    \t, EventNum  INT                    -- 30 Day Readmit Number:\n    \t                                   --  (How many 30day RA's)\n    \t, PRIMARY KEY (EventNum, PersonID) -- Complex Index Key\n    );\n    INSERT @EventsWithNum\n    SELECT crt.EVENTID\n    , crt.EVENTDATE\n    , crt.PERSONID\n    , crt.VISIT\n    , crt.DSCH\n    , ROW_NUMBER() OVER(\n    \t\t\t\t\tPARTITION BY crt.PERSONID\n    \t\t\t\t\tORDER BY crt.EVENTDATE\n    \t\t\t\t\t, CRT.EVENTID\n    \t\t\t\t\t) AS EventNum\n    \n    FROM @EVENTS crt\n    WHERE crt.PERSONID IS NOT NULL -- We don't want NULL Encounter ID's\n    ;\n    \n    --SELECT * FROM @EventsWithNum ** Uncomment to see intermediate results\n    \n    -- Another Common Table Expression to get the Sequential Events and counts\n    WITH CountingSequentialEvents AS (\n    \tSELECT crt.EventID\n    \t, crt.EventDate\n    \t, crt.PersonID\n    \t, crt.VISIT\n    \t, crt.DSCH\n    \t, crt.EventNum\n    \t, 1 AS GroupNum\n    \t, 1 AS GroupEventNum\n    \n    \tFROM @EventsWithNum crt\n    \t\n    \tWHERE crt.EventNum = 1\n    \n    \tUNION ALL\n    \n    \tSELECT crt.EventID\n    \t, crt.EventDate\n    \t, crt.PersonID\n    \t, crt.VISIT\n    \t, crt.DSCH\n    \t, crt.EventNum\n    \t, CASE\n    \t\tWHEN DATEDIFF(DAY, prev.EventDate, crt.EventDate) <= 30\n    \t\tTHEN prev.GroupNum\n    \t\tELSE prev.GroupNum + 1\n    \t  END AS GroupNum\n    \t, CASE\n    \t\tWHEN DATEDIFF(DAY, prev.EventDate, crt.EventDate) <= 30\n    \t\tTHEN prev.GroupEventNum + 1\n    \t\tELSE 1\n    \t  END AS GroupEventNum\n    \n    \tFROM @EventsWithNum                  crt\n    \tJOIN CountingSequentialEvents        prev\n    \tON crt.PersonID = prev.PersonID\n    \tAND crt.EventNum = prev.EventNum + 1\n    )\n    SELECT x.EventID                        AS [EVENT ID]\n    , x.EventDate                           AS [ADMIT DATE]\n    , x.PersonID                            AS [MRN]\n    , x.VISIT                               AS [VISIT ID]\n    , x.DSCH                                AS [DISCHARGE DATE]\n    , A.drg_no                              AS [INITIAL APR-DRG]\n    , CASE\n    \tWHEN GE.[APR-DRG] IS NULL\n    \tTHEN 0\n    \tELSE 1\n      END                                   AS [INITIAL EXCLUSION FLAG]\n    , B.dsch_disp                           AS [INITIAL DISPO]\n    , x.GroupEventNum                       AS [CHAIN LEN]\n    , x.GroupNum                            AS [CHAIN NUMBER]\n    , x.EventNum                            AS [30 DAY RA COUNT]\n    , V.READMIT                             AS [READMIT VISIT ID]\n    , C.drg_no                              AS [READMIT APR-DRG]\n    , CASE\n    \tWHEN GE2.[APR-DRG] IS NULL\n    \tTHEN 0\n    \tELSE 1\n      END                                   AS [RA EXCLUSION FLAG]\n    , D.dsch_disp                           AS [READMIT DISPO]\n    , CAST(V.[READMIT DATE] AS DATE)        AS [READMIT DATE]\n    , V.INTERIM\n    \n    FROM CountingSequentialEvents        x\n    \tLEFT MERGE JOIN smsdss.vReadmits V\n    \tON x.VISIT = V.[INDEX] \n    \tLEFT OUTER JOIN smsmir.mir_drg   A  -- Gets APR-DRG OF INITIAL VISIT\n    \tON x.VISIT = A.pt_id\n    \tLEFT OUTER JOIN smsmir.mir_vst   B  -- Gets Discharge Dispo OF INITIAL VISIT\n    \tON A.pt_id = B.pt_id\n    \tLEFT OUTER JOIN smsmir.mir_drg   C  -- GET APR-DRG OF READMIT VISIT\n    \tON V.READMIT = C.pt_id\n    \tLEFT OUTER JOIN smsmir.mir_vst   D  -- GETS DISCHARGE DISPO OF READMIT VISIT\n    \tON C.pt_id = D.pt_id\n    \t-- GET THE GLOBALLY EXCLUDED APR-DRGS SO THAT WE CAN FILTER\n    \t-- INITIAL APR-DRG EXCLUSION\n    \tLEFT OUTER JOIN smsdss.c_ppr_apr_drg_global_exclusions GE\n    \tON A.drg_no = GE.[APR-DRG]\n    \t-- READMIT APR-DRG EXCLUSION\n    \tLEFT OUTER JOIN smsdss.c_ppr_apr_drg_global_exclusions GE2\n    \tON C.drg_no = GE2.[APR-DRG]\n    \n    -- THIS LIMITS THE DRG TYPE, IT ALSO DROPS MANY RECORDS FROM THE FINAL RESULT SET\n    WHERE A.drg_type = '3'\n    AND C.drg_type = '3'\n    AND V.[READMIT SOURCE DESC] != 'Scheduled Admission'\n    \n    ORDER BY x.PersonID, x.EventDate\n    \n1. We may to turn this into either a view or an update-able indexed table for future phase use.\n\nThe above query will get the following information:\n\n 1. EventID  - (a secondary primary key)\n 2. EventDate  - (the date of admission)\n 3. PersonID  - (Medical Record Number)\n 4. VISIT - (Visit ID)\n 5. DSCH - (Discharge Date)\n 6. drg_no - (Initial APR-DRG)\n 7. Initial Exclusion Flag - (was the APR-DRG on the exclusion list, 1/0)\n 8. dsch_disp - (initial discharge disposition)\n 9. GroupEventNum - (Daisy Chain length)\n 10. GroupNum - (Chain number)\n 11. EventNum - (The count of being a 30 day readmit)\n 12. NextVisitID - (The next encoutner / visit id)\n 13. c.drg_no - (Readmission APR-DRG)\n 14. RA Exclusion Flag - (was the APR-DRG on the exclusion list, 1/0)\n 15. D.dsch_disp - (Readmission Discharge Disposition)\n 16. ReadmittedDT - (Readmission Date)\n 17. Interim - (How many days between addmisions, NULL allowable)\n\nThe filtering on the APR-DRG and the discharge disposition is not done with the above query as we want to turn that itself into either an indexed table or a view that can have logic applied to it for performance purposes.\n\n## Next Steps ##\n1. Create update-able indexed tables from smsdss.vReadmits\n2. Create update-able indexed table from PPR_CHAINS query\n3. Create indexed table for non-event procedures\n4. Write non-event procedures table just like globally excluded drg table\n \n    \n    ","file.by8me0.editorScrollTop":"0","file.by8me0.editorSelectRange":"5;25;5;25","file.by8me0.previewScrollTop":"0","file.by8me0.publish":";publish.1kk21g5;publish.1nnfxat;","file.by8me0.selectTime":"1404396158844","file.by8me0.sync":";sync.dropbox.%2Fppr%20documentation.md;","file.by8me0.title":"PPR Documentation.md","file.d0h9d9.content":"Welcome to StackEdit!\t{#welcome}\n=====================\n\n\nHello, I am your first Markdown document within **StackEdit**[^stackedit]. Don't delete me, I can be helpful. I can be recovered anyway in the `Utils` tab of the <i class=\"icon-cog\"></i> `Settings` dialog.\n\n----------\n\n\nDocuments\n---------\n\n**StackEdit** stores your documents in your browser, which means all your documents are automatically saved locally and are accessible **offline!**\n\n> **NOTE:**\n> \n> - StackEdit is accessible offline after the application has been loaded for the first time.\n> - Your local documents are not shared between different browsers or computers.\n> - Clearing your browser's data may **delete all your local documents!** Make sure your documents are backed up using **Google Drive** or **Dropbox** synchronization (see [<i class=\"icon-share\"></i> Synchronization](#synchronization) section).\n\n#### <i class=\"icon-file\"></i> Create a document\n\nYou can create a new document by clicking the <i class=\"icon-file\"></i> button in the navigation bar. It will switch from the current document to the new one.\n\n#### <i class=\"icon-folder-open\"></i> Switch to another document\n\nYou can list all your local documents and switch from one to another by clicking the <i class=\"icon-folder-open\"></i> button in the navigation bar.\n\n#### <i class=\"icon-pencil\"></i> Rename a document\n\nYou can rename the current document by clicking the document title in the navigation bar.\n\n#### <i class=\"icon-trash\"></i> Delete a document\n\nYou can delete the current document by clicking the <i class=\"icon-trash\"></i> button in the navigation bar.\n\n#### <i class=\"icon-hdd\"></i> Save a document\n\nYou can save the current document to a file using the <i class=\"icon-hdd\"></i> `Save as...` sub-menu from the <i class=\"icon-provider-stackedit\"></i> menu.\n\n> **Tip:** See [<i class=\"icon-share\"></i> Publish a document](#publish-a-document) section for a description of the different output formats.\n\n\n----------\n\n\nSynchronization\n---------------\n\n**StackEdit** can be combined with **Google Drive** and **Dropbox** to have your documents centralized in the *Cloud*. The synchronization mechanism will take care of uploading your modifications or downloading the latest version of your documents.\n\n> **NOTE:**\n> \n> - Full access to **Google Drive** or **Dropbox** is required to be able to import any document in StackEdit.\n> - Imported documents are downloaded in your browser and are not transmitted to a server.\n> - If you experience problems exporting documents to Google Drive, check and optionally disable browser extensions, such as Disconnect.\n\n#### <i class=\"icon-download\"></i> Import a document\n\nYou can import a document from the *Cloud* by going to the <i class=\"icon-provider-gdrive\"></i> `Google Drive` or the <i class=\"icon-provider-dropbox\"></i> `Dropbox` sub-menu and by clicking `Import from...`. Once imported, your document will be automatically synchronized with the **Google Drive** / **Dropbox** file.\n\n#### <i class=\"icon-upload\"></i> Export a document\n\nYou can export any document by going to the <i class=\"icon-provider-gdrive\"></i> `Google Drive` or the <i class=\"icon-provider-dropbox\"></i> `Dropbox` sub-menu and by clicking `Export to...`. Even if your document is already synchronized with **Google Drive** or **Dropbox**, you can export it to a another location. **StackEdit** can synchronize one document with multiple locations.\n\n> **Tip:** Using **Google Drive**, you can create collaborative documents to work in real time with other users. Just check the box `Create a real time collaborative document` in the dialog options when exporting to Google Drive.\n\n#### <i class=\"icon-refresh\"></i> Synchronize a document\n\nOnce your document is linked to a **Google Drive** or a **Dropbox** file, **StackEdit** will periodically (every 3 minutes) synchronize it by downloading/uploading any modification. Any conflict will be detected, and a local copy of your document will be created as a backup if necessary.\n\nIf you just have modified your document and you want to force the synchronization, click the <i class=\"icon-refresh\"></i> button in the navigation bar.\n\n> **NOTE:** The <i class=\"icon-refresh\"></i> button is disabled when you have no document to synchronize.\n\n#### <i class=\"icon-refresh\"></i> Manage document synchronization\n\nSince one document can be synchronized with multiple locations, you can list and manage synchronized locations by clicking <i class=\"icon-refresh\"></i> `Manage synchronization` in the <i class=\"icon-provider-stackedit\"></i> menu. This will open a dialog box allowing you to add or remove synchronization links that are associated to your document.\n\n> **NOTE:** If you delete the file from **Google Drive** or from **Dropbox**, the document will no longer be synchronized with that location.\n\n----------\n\n\nPublication\n-----------\n\nOnce you are happy with your document, you can publish it on different websites directly from **StackEdit**. As for now, **StackEdit** can publish on **Blogger**, **Dropbox**, **Gist**, **GitHub**, **Google Drive**, **Tumblr**, **WordPress** and on any SSH server.\n\n#### <i class=\"icon-share\"></i> Publish a document\n\nYou can publish your document by going to the <i class=\"icon-share\"></i> `Publish on` sub-menu and by choosing a website. In the dialog box, you can choose the publication format:\n\n- Markdown, to publish the Markdown text on a website that can interpret it (**GitHub** for instance),\n- HTML, to publish the document converted into HTML (on a blog for instance),\n- Template, to have a full control of the output.\n\n> **NOTE:** The default template is a simple webpage wrapping your document in HTML format. You can customize it in the `Services` tab of the <i class=\"icon-cog\"></i> `Settings` dialog.\n\n#### <i class=\"icon-share\"></i> Update a publication\n\nAfter publishing, **StackEdit** will keep your document linked to that publish location so that you can update it easily. Once you have modified your document and you want to update your publication, click on the <i class=\"icon-share\"></i> button in the navigation bar.\n\n> **NOTE:** The <i class=\"icon-share\"></i> button is disabled when the document has not been published yet.\n\n#### <i class=\"icon-share\"></i> Manage document publication\n\nSince one document can be published on multiple locations, you can list and manage publish locations by clicking <i class=\"icon-share\"></i> `Manage publication` in the <i class=\"icon-provider-stackedit\"></i> menu. This will open a dialog box allowing you to remove publication links that are associated to your document.\n\n> **NOTE:** In some cases, if the file has been removed from the website or the blog, the document will no longer be published on that location.\n\n----------\n\n\nMarkdown Extra\n--------------\n\n**StackEdit** supports **Markdown Extra**, which extends **Markdown** syntax with some nice features.\n\n> **Tip:** You can disable any **Markdown Extra** feature in the `Extensions` tab of the <i class=\"icon-cog\"></i> `Settings` dialog.\n\n\n### Tables\n\n**Markdown Extra** has a special syntax for tables:\n\nItem      | Value\n--------- | -----\nComputer  | 1600 USD\nPhone     | 12 USD\nPipe      | 1 USD\n\nYou can specify column alignment with one or two colons:\n\n| Item      |    Value | Qty  |\n| :-------- | --------:| :--: |\n| Computer  | 1600 USD |  5   |\n| Phone     |   12 USD |  12  |\n| Pipe      |    1 USD | 234  |\n\n\n### Definition Lists\n\n**Markdown Extra** has a special syntax for definition lists too:\n\nTerm 1\nTerm 2\n:   Definition A\n:   Definition B\n\nTerm 3\n\n:   Definition C\n\n:   Definition D\n\n\t> part of definition D\n\n\n### Fenced code blocks\n\nGitHub's fenced code blocks[^gfm] are also supported with **Prettify** syntax highlighting:\n\n```\n// Foo\nvar bar = 0;\n```\n\n> **Tip:** To use **Highlight.js** instead of **Prettify**, just configure the `Markdown Extra` extension in the <i class=\"icon-cog\"></i> `Settings` dialog.\n\n\n### Footnotes\n\nYou can create footnotes like this[^footnote].\n\n  [^footnote]: Here is the *text* of the **footnote**.\n\n\n### SmartyPants\n\nSmartyPants converts ASCII punctuation characters into \"smart\" typographic punctuation HTML entities. For example:\n\n|                  | ASCII                                    | HTML                                |\n ------------------|------------------------------------------|-------------------------------------\n| Single backticks | `'Isn't this fun?'`                      | &#8216;Isn&#8217;t this fun?&#8217; |\n| Quotes           | `\"Isn't this fun?\"`                      | &#8220;Isn&#8217;t this fun?&#8221; |\n| Dashes           | `-- is an en-dash and --- is an em-dash` | &#8211; is an en-dash and &#8212; is an em-dash |\n\n\n### Table of contents\n\nYou can insert a table of contents using the marker `[TOC]`:\n\n[TOC]\n\n\n### Comments\n\nUsually, comments in Markdown are just standard HTML comments. <!-- like this -->\n**StackEdit** extends HTML comments in order to produce useful, highlighted comments in the preview but not in your exported documents. <!--- This is very useful for collecting feedback in a collaborative document. -->\n\n\n### MathJax\n \nYou can render *LaTeX* mathematical expressions using **MathJax**, as on [math.stackexchange.com][1]:\n\nThe *Gamma function* satisfying $\\Gamma(n) = (n-1)!\\quad\\forall\nn\\in\\mathbb N$ is via the Euler integral\n\n$$\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n$$\n\n> **Tip:** Make sure you include MathJax into your publications to render mathematical expression correctly. Your page/template should include something like: \n\n```\n<script type=\"text/javascript\" src=\"https://stackedit.io/libs/MathJax/MathJax.js?config=TeX-AMS_HTML\"></script>\n```\n\n> **NOTE:** You can find more information:\n>\n> - about **Markdown** syntax [here][2],\n> - about **Markdown Extra** extension [here][3],\n> - about **LaTeX** mathematical expressions [here][4],\n> - about **Prettify** syntax highlighting [here][5],\n> - about **Highlight.js** syntax highlighting [here][6].\n\n  [^stackedit]: [StackEdit](https://stackedit.io/) is a full-featured, open-source Markdown editor based on PageDown, the Markdown library used by Stack Overflow and the other Stack Exchange sites.\n\n  [^gfm]: **GitHub Flavored Markdown** (GFM) is supported by StackEdit.\n\n\n  [1]: http://math.stackexchange.com/\n  [2]: http://daringfireball.net/projects/markdown/syntax \"Markdown\"\n  [3]: https://github.com/jmcmanus/pagedown-extra \"Pagedown Extra\"\n  [4]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\n  [5]: https://code.google.com/p/google-code-prettify/\n  [6]: http://highlightjs.org/","file.d0h9d9.editorSelectRange":"0;0;0;0","file.d0h9d9.previewScrollTop":"75","file.d0h9d9.publish":";","file.d0h9d9.selectTime":"1404134921955","file.d0h9d9.sync":";","file.d0h9d9.title":"Welcome document","file.list":";file.d0h9d9;file.1vfv3tx;file.by8me0;","folder.list":";","frontWindowId":"s6bbea","githubToken":"2cede7522f2beeb64b79eb591cdb79f7461665ca","mode":"_ace_","publish.1kk21g5":"{\"repository\":\"bmhmc-sql\",\"username\":\"spsanderson\",\"branch\":\"master\",\"path\":\"PPR/PPR_Documentation\",\"format\":\"markdown\",\"provider\":\"github\"}","publish.1nnfxat":"{\"gistId\":\"3c1e9a8710048dc33dbe\",\"filename\":\"PPR Documentation\",\"isPublic\":true,\"format\":\"markdown\",\"sharingLink\":\"https://stackedit.io/viewer#!provider=gist&gistId=3c1e9a8710048dc33dbe&filename=PPR%20Documentation\",\"provider\":\"gist\"}","settings":"{\"layoutOrientation\":\"horizontal\",\"lazyRendering\":true,\"editorFontFamily\":\"Menlo, Consolas, \\\"Courier New\\\", Courier, monospace\",\"editorFontSize\":13,\"maxWidth\":960,\"defaultContent\":\"\\n\\n\\n> Written with [StackEdit](https://stackedit.io/).\",\"commitMsg\":\"Published with https://stackedit.io/\",\"gdriveMultiAccount\":1,\"gdriveFullAccess\":true,\"dropboxFullAccess\":true,\"githubFullAccess\":true,\"template\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\\\"utf-8\\\">\\n<title><%= documentTitle %></title>\\n<link rel=\\\"stylesheet\\\" href=\\\"https://stackedit.io/res-min/themes/base.css\\\" />\\n<script type=\\\"text/javascript\\\" src=\\\"https://stackedit.io/libs/MathJax/MathJax.js?config=TeX-AMS_HTML\\\"></script>\\n</head>\\n<body><div class=\\\"container\\\"><%= documentHTML %></div></body>\\n</html>\",\"pdfTemplate\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\\\"utf-8\\\">\\n<title><%= documentTitle %></title>\\n<link rel=\\\"stylesheet\\\" href=\\\"https://stackedit.io/res-min/themes/base.css\\\" />\\n<script type=\\\"text/x-mathjax-config\\\">\\nMathJax.Hub.Config({ messageStyle: \\\"none\\\" });\\n</script>\\n<script type=\\\"text/javascript\\\" src=\\\"https://stackedit.io/libs/MathJax/MathJax.js?config=TeX-AMS_HTML\\\"></script>\\n</head>\\n<body class=\\\"pdf\\\"><%= documentHTML %></body>\\n</html>\",\"pdfPageSize\":\"A4\",\"sshProxy\":\"https://stackedit-ssh-proxy.herokuapp.com/\",\"shortcuts\":{\"bold\":{\"win\":\"Ctrl-B\",\"mac\":\"Command-B|Ctrl-B\"},\"italic\":{\"win\":\"Ctrl-I\",\"mac\":\"Command-I|Ctrl-I\"},\"link\":{\"win\":\"Ctrl-L\",\"mac\":\"Command-L|Ctrl-L\"},\"quote\":{\"win\":\"Ctrl-Q\",\"mac\":\"Command-Q|Ctrl-Q\"},\"code\":{\"win\":\"Ctrl-K\",\"mac\":\"Command-K|Ctrl-K\"},\"image\":{\"win\":\"Ctrl-G\",\"mac\":\"Command-G|Ctrl-G\"},\"olist\":{\"win\":\"Ctrl-O\",\"mac\":\"Command-O|Ctrl-O\"},\"ulist\":{\"win\":\"Ctrl-U\",\"mac\":\"Command-U|Ctrl-U\"},\"heading\":{\"win\":\"Ctrl-H\",\"mac\":\"Command-H|Ctrl-H\"},\"hr\":{\"win\":\"Ctrl-R\",\"mac\":\"Command-R|Ctrl-R\"},\"undo\":{\"win\":\"Ctrl-Z\",\"mac\":\"Command-Z\"},\"redo\":{\"win\":\"Ctrl-Y|Ctrl-Shift-Z\",\"mac\":\"Command-Y|Command-Shift-Z\"},\"selectall\":{\"win\":\"Ctrl-A\",\"mac\":\"Command-A\"},\"removeline\":{\"win\":\"Ctrl-D\",\"mac\":\"Command-D\"},\"duplicateSelection\":{\"win\":\"Ctrl-Shift-D\",\"mac\":\"Command-Shift-D\"},\"sortlines\":{\"win\":\"Ctrl-Alt-S\",\"mac\":\"Command-Alt-S\"},\"modifyNumberUp\":{\"win\":\"Ctrl-Shift-Up\",\"mac\":\"Alt-Shift-Up\"},\"modifyNumberDown\":{\"win\":\"Ctrl-Shift-Down\",\"mac\":\"Alt-Shift-Down\"},\"find\":{\"win\":\"Ctrl-F\",\"mac\":\"Command-F\"},\"replace\":{\"win\":\"Ctrl-Shift-F\",\"mac\":\"Command-Option-F\"},\"findnext\":{\"win\":\"Ctrl-P\",\"mac\":\"Command-P\"},\"findprevious\":{\"win\":\"Ctrl-Shift-P\",\"mac\":\"Command-Shift-P\"},\"togglerecording\":{\"win\":\"Ctrl-Alt-E\",\"mac\":\"Command-Option-E\"},\"replaymacro\":{\"win\":\"Ctrl-Shift-E\",\"mac\":\"Command-Shift-E\"}},\"extensionSettings\":{\"yamlFrontMatterParser\":{},\"markdownSectionParser\":{},\"partialRendering\":{\"enabled\":true},\"buttonMarkdownSyntax\":{\"enabled\":true},\"googleAnalytics\":{\"enabled\":true},\"twitter\":{},\"dialogAbout\":{},\"dialogManagePublication\":{},\"dialogManageSynchronization\":{},\"dialogManageSharing\":{},\"dialogOpenHarddrive\":{},\"documentTitle\":{},\"documentSelector\":{\"orderBy\":\"mru\",\"shortcutPrevious\":\"Ctrl+[\",\"shortcutNext\":\"Ctrl+]\",\"enabled\":true},\"documentPanel\":{},\"documentManager\":{},\"workingIndicator\":{},\"notifications\":{\"timeout\":8000,\"enabled\":true},\"markdownExtra\":{\"extensions\":[\"fenced_code_gfm\",\"tables\",\"def_list\",\"attr_list\",\"footnotes\",\"smartypants\",\"strikethrough\",\"newlines\"],\"intraword\":true,\"comments\":true,\"highlighter\":\"prettify\",\"enabled\":true},\"toc\":{\"marker\":\"\\\\[(TOC|toc)\\\\]\",\"maxDepth\":6,\"button\":true,\"enabled\":true},\"mathJax\":{\"tex\":\"{}\",\"tex2jax\":\"{ inlineMath: [[\\\"$\\\",\\\"$\\\"],[\\\"\\\\\\\\\\\\\\\\(\\\",\\\"\\\\\\\\\\\\\\\\)\\\"]], displayMath: [[\\\"$$\\\",\\\"$$\\\"],[\\\"\\\\\\\\[\\\",\\\"\\\\\\\\]\\\"]], processEscapes: true }\",\"enabled\":true},\"emailConverter\":{\"enabled\":true},\"scrollLink\":{\"enabled\":true},\"buttonFocusMode\":{\"enabled\":true},\"buttonSync\":{\"syncPeriod\":180000,\"syncShortcut\":\"mod+s\",\"enabled\":true},\"buttonPublish\":{},\"buttonStat\":{\"name1\":\"Characters\",\"value1\":\"\\\\S\",\"name2\":\"Words\",\"value2\":\"\\\\S+\",\"name3\":\"Paragraphs\",\"value3\":\"\\\\S.*\",\"enabled\":true},\"buttonHtmlCode\":{\"template\":\"<%= documentHTML %>\",\"enabled\":true},\"buttonViewer\":{\"enabled\":true},\"welcomeTour\":{},\"spellCheck\":{\"locale\":\"en_US\",\"enabled\":true},\"userCustom\":{\"code\":\"\",\"enabled\":true}}}","sync.dropbox.%2Fppr%20documentation.md":"{\"path\":\"/PPR Documentation.md\",\"version\":\"69f020084b261\",\"contentCRC\":\"d328827e\",\"provider\":\"dropbox\"}","themeV3":"default","version":"v17","welcomeTour":"done"}